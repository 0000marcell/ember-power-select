{{#basic-dropdown class=(readonly concatenatedClasses) renderInPlace=renderInPlace matchTriggerWidth=true
  disabled=disabled dropdownPosition=dropdownPosition triggerClass="ember-power-select-trigger" dropdownClass=_dropdownClass
  onOpen=(action onOpen) onClose=(action onClose) onKeydown=(action onKeydown) registerActionsInParent=(action "registerDropdown") as |dropdown|}}
  {{#if searchEnabled}}
    <div class="ember-power-select-search">
      <input type="search" autocomplete="off" autocorrect="off" autocapitalize="off"
      spellcheck="false" role="textbox" oninput={{action "search" value="target.value"}}
      onkeydown={{action onKeydown dropdown}} placeholder={{searchPlaceholder}}>
    </div>
  {{/if}}
  <ul class="ember-power-select-options">
    {{#if _loadingOptions}}
      <li class="ember-power-select-option">{{loadingMessage}}</li>
    {{/if}}
    {{#if resultsLength}}
      {{#component optionsComponent options=(readonly results) highlighted=(readonly _highlighted) selection=(readonly selection) optionsComponent=(readonly optionsComponent)
        searchText=(readonly _searchText) highlight=(action "highlight") select=(action select) dropdown=(readonly dropdown) as |option|}}
        {{yield option}}
      {{/component}}
    {{else if mustSearch}}
      <li class="ember-power-select-option">{{searchMessage}}</li>
    {{else if _notLoadingOptions}}
      {{#if hasInverseBlock}}
        {{yield to="inverse"}}
      {{else}}
        <li class="ember-power-select-option">{{noMatchesMessage}}</li>
      {{/if}}
    {{/if}}
  </ul>
{{else}}
  {{#component selectedComponent selection=(readonly selection) allowClear=(readonly allowClear) disabled=(readonly disabled)
    placeholder=(readonly placeholder) dropdown=(readonly registeredDropdown) clearSelection=(action "clear") as |opt|}}
    {{yield opt}}
  {{/component}}
{{/basic-dropdown}}
