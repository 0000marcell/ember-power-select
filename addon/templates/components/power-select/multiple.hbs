{{#basic-dropdown class=(readonly concatenatedClasses) dir=dir tabindex=(readonly tabindex) renderInPlace=renderInPlace matchTriggerWidth=true
  disabled=disabled dropdownPosition=dropdownPosition triggerClass=(readonly triggerClass) dropdownClass=concatenatedDropdownClasses
  onOpen=(action onOpen) onClose=(action onClose) onFocus=(action focusSearch) onKeydown=(action "handleKeydown") registerActionsInParent=(action "registerDropdown") as |dropdown|}}
  {{#with (hash
    isOpen=dropdown.isOpen
    actions=(hash
      open=(action "open" dropdown)
      close=(action "close" dropdown)
      select=(action "select" dropdown)
      highlight=(action "highlight" dropdown)
      search=(action "search" dropdown)
      removeOption=(action "removeOption" dropdown)
      handleKeydown=(action "handleKeydown" dropdown)
    )) as |select|}}

    <ul class="ember-power-select-options">
      {{#if showLoadingMessage}}
        <li class="ember-power-select-option">{{loadingMessage}}</li>
      {{/if}}
      {{#if resultsLength}}
        {{#component optionsComponent options=(readonly results) highlighted=(readonly highlighted)
          selection=(readonly selection) optionsComponent=(readonly optionsComponent) searchText=(readonly searchText)
          select=(readonly select) extra=(readonly extra) as |option term|}}
          {{yield option term}}
        {{/component}}
      {{else if mustShowSearchMessage}}
        <li class="ember-power-select-option">{{searchMessage}}</li>
      {{else if noPendingPromises}}
        {{#if hasInverseBlock}}
          {{yield to="inverse"}}
        {{else if noMatchesMessage}}
          <li class="ember-power-select-option">{{noMatchesMessage}}</li>
        {{/if}}
      {{/if}}
    </ul>
  {{/with}}
{{else}}
  {{#with (hash
    isOpen=registeredDropdown.isOpen
    actions=(hash
      open=(action "open" registeredDropdown)
      close=(action "close" registeredDropdown)
      select=(action "select" registeredDropdown)
      highlight=(action "highlight" registeredDropdown)
      search=(action "search" registeredDropdown)
      removeOption=(action "removeOption" registeredDropdown)
      handleKeydown=(action "handleKeydown" registeredDropdown)
    )) as |select|}}
    {{#component selectedComponent options=(readonly results) selection=(readonly selection) searchText=(readonly searchText)
      placeholder=(readonly placeholder) disabled=(readonly disabled) highlighted=(readonly highlighted)
      hasPendingPromises=(readonly hasPendingPromises) select=(readonly select) extra=(readonly extra) as |opt term|}}
      {{yield opt term}}
    {{/component}}
  {{/with}}
 {{/basic-dropdown}}
