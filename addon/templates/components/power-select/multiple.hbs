{{#basic-dropdown class=(readonly concatenatedClasses) dir=dir tabindex=(readonly tabindex) renderInPlace=renderInPlace matchTriggerWidth=true
  disabled=disabled dropdownPosition=dropdownPosition triggerClass=(readonly triggerClass) dropdownClass=_dropdownClass
  onOpen=(action onOpen) onClose=(action onClose) onFocus=(action focusSearch) onKeydown=(action onKeydown) registerActionsInParent=(action "registerDropdown") as |dropdown|}}
  <ul class="ember-power-select-options">
    {{#if _loadingOptions}}
      <li class="ember-power-select-option">{{loadingMessage}}</li>
    {{/if}}
    {{#if resultsLength}}
      {{#component optionsComponent options=(readonly results) highlighted=(readonly _highlighted) selection=(readonly selection)
        optionsComponent=(readonly optionsComponent) highlight=(action "highlight") select=(action select)
        searchText=(readonly _searchText) dropdown=(readonly dropdown) as |option|}}
        {{yield option}}
      {{/component}}
    {{else if mustSearch}}
      <li class="ember-power-select-option">{{searchMessage}}</li>
    {{else if _notLoadingOptions}}
      {{#if hasInverseBlock}}
        {{yield to="inverse"}}
      {{else}}
        <li class="ember-power-select-option">{{noMatchesMessage}}</li>
      {{/if}}
    {{/if}}
  </ul>
{{else}}
  {{#component selectedComponent selection=(readonly selection) dropdown=(readonly registeredDropdown)
    searchText=(readonly _searchText) placeholder=(readonly placeholder) disabled=(readonly disabled)
    removeOption=(action "removeOption") search=(action "search") onKeydown=(action onKeydown registeredDropdown) as |opt|}}
    {{yield opt}}
  {{/component}}
 {{/basic-dropdown}}
